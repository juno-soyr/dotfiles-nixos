/* Modified from https://github.com/christorange/VerticalFox/blob/main/windows/userChrome.css */
/* SIDEBERY */
/*
:root:not([customizing]) {
    .tab[selected="true"] {
        visibility: collapse;
        height: 0px;
    }

    .tabbrowser-tab {
        visibility: collapse;
        height: 0px;
    }

    .tabbrowser-tab[visuallyselected="true"] {
        visibility: collapse;
        height: 0px;
    }
}
*/

/* AUTO HIDE SIDE BAR */
#sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"]:not([sidebar-launcher-expanded]) {
    @media -moz-pref("uc.flex.sidebery-allow-resizable-width") and (not -moz-pref("uc.flex.fully-hide-sidebery")) {
        :root:not([inFullscreen], [titlepreface*="\200c "], [titlepreface*="\200d "]) & {
            min-width: var(--uc-sidebar-stripe-width) !important;
            width: var(--uc-sidebar-stripe-width) !important;
            max-width: var(--uc-sidebar-stripe-width) !important;
            &:not([sidebar-positionend]) {
                margin-right: 0 !important;
            }
            &[sidebar-positionend] {
                margin-left: 0 !important;
            }
        }
    }
}
#sidebar-box[sidebarcommand="_3c078156-979c-498b-8990-85f7987dd929_-sidebar-action"][sidebar-panel-open] {
    position: relative;
    @media not -moz-pref("uc.flex.sidebery-allow-resizable-width"), -moz-pref("uc.flex.fully-hide-sidebery") {
        min-width: var(--uc-sb-sidebar-width) !important;
        width: var(--uc-sb-sidebar-width) !important;
        max-width: var(--uc-sb-sidebar-width) !important;
    }
    @media not -moz-pref("uc.flex.fully-hide-sidebery") {
        :root:is([inFullscreen], [titlepreface*="\200c "], [titlepreface*="\200d "]) & {
            min-width: var(--uc-sb-sidebar-width) !important;
            width: var(--uc-sb-sidebar-width) !important;
            max-width: var(--uc-sb-sidebar-width) !important;
        }
    }
    background-color: transparent !important;
    /** 
     * Raise the z-index of Sidebery on hover
     * so it can appear above #tabbrowser-tabbox.
     * When not hovering, keep the z-index low so the tab box shadow stays on top. 
     */
    @media not (-moz-pref("uc.flex.disable-sidebery-autohide") or -moz-pref("uc.flex.sidebery-allow-resizable-width")) {
        :root:not([titlepreface*="\180e "]) & {
            /** 
             * Although z-index is listed as an animatable integer on MDN,
             * Firefox treats it as a discrete property that requires 'allow-discrete'
             * for transition delays to take effect.
             * To avoid ambiguity, we still apply a manual delay equal to other
             * properties' delay + duration, ensuring the change happens after animation ends.
             */
            transition:
                opacity var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay),
                z-index 0ms linear
                    calc(var(--uc-autohide-sidebar-delay) + var(--uc-autohide-transition-duration) + 10ms)
                    allow-discrete,
                clip-path var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay);
            @media not -moz-pref("uc.flex.fully-hide-sidebery") {
                :root:not([inFullscreen], [titlepreface*="\200c "], [titlepreface*="\200d "]) & {
                    &:hover {
                        transition:
                            opacity var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                                calc(var(--uc-hover-sidebar-delay) + 10ms),
                            z-index 0ms linear calc(var(--uc-hover-sidebar-delay) - 10ms) allow-discrete,
                            clip-path var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                                var(--uc-hover-sidebar-delay);
                        --browser-area-z-index-sidebar: 3;
                        /**
                         * Firefox applies --browser-area-z-index-sidebar to the whole sidebar
                         * in vertical tab mode, to support hover expansion of #sidebar-main.
                         * In horizontal tab mode, this variable isn't set,
                         * so the sidebar keeps its default z-index (auto).
                         * Set z-index explicitly to ensure Sidebery appears above the page.
                         */
                        z-index: 100;
                    }
                    /**
                     * When vertical tabs are set to expand on hover
                     * and Sidebery is locked in the expanded state (:root[sidebar-expand-on-hover]),
                     * lower z-index to let the tab box shadow appear above,
                     * except when Sidebery is hidden or in fullscreen.
                     */
                    @media -moz-pref("sidebar.visibility", "expand-on-hover") {
                        :root[sidebar-expand-on-hover] & {
                            --browser-area-z-index-sidebar: 1;
                        }
                    }
                }
            }
            /* Keep Sidebery visible when the sidebar header menu is open */
            @media not -moz-pref("sidebar.revamp") {
                &:has(#sidebar-switcher-target.active) {
                    z-index: 100;
                }
            }
        }
    }
    /* No need to lower z-index when vertical tabs are fully hidden or in fullscreen */
    @media -moz-pref("uc.flex.fully-hide-sidebery") {
        --browser-area-z-index-sidebar: 3;
        z-index: 100;
    }
    @media not -moz-pref("uc.flex.fully-hide-sidebery") {
        :root:is([inFullscreen], [titlepreface*="\200c "], [titlepreface*="\200d "]) & {
            --browser-area-z-index-sidebar: 3;
            z-index: 100;
        }
    }

    &[sidebar-positionend] {
        direction: rtl;
        &:-moz-locale-dir(rtl) {
            direction: ltr;
        }

        #sidebar-header,
        #sidebar {
            direction: ltr;
            &:-moz-locale-dir(rtl) {
                direction: rtl;
            }
        }
    }

    /* Remove sidebar splitter */
    & + #sidebar-splitter {
        display: none;
        @media -moz-pref("uc.flex.sidebery-allow-resizable-width") and (not -moz-pref("uc.flex.fully-hide-sidebery")) {
            :root:not([inFullscreen], [titlepreface*="\200c "], [titlepreface*="\200d "]) & {
                #sidebar-box:not([sidebar-positionend]) + & {
                    margin-inline-start: -1px !important;
                }
                #sidebar-box[sidebar-positionend] + & {
                    margin-inline-end: -1px !important;
                }
                display: flex;
                width: 2px !important;
                border-width: 0px !important;
            }
        }
    }

    /* Remove sidebar stripe */
    @media -moz-pref("uc.flex.remove-sidebar-stripe") {
        #sidebar {
            border-top: 1px solid light-dark(#ced1d4, #686869b3) !important;
        }
        #sidebar-header {
            display: none;
        }
    }

    /* Hide Sidebery when auto-collapse is disabled but full hiding of Sidebery or fullscreen mode is enabled */
    /* 
     * These rules apply in the following cases:
     * 1. If `uc.flex.disable-sidebery-autohide` is not enabled (auto-hide not disabled), auto-hide applies.
     * 2. If `uc.flex.fully-hide-sidebery` is enabled (fully hide Sidebery), auto-hide applies regardless of the "disable auto-hide" setting.
     * 3. If in fullscreen mode or when using the `Hide Sidebery` / `Hide All` shortcuts, auto-hide applies.
     */
    /* Style 1 */
    @media not (-moz-pref("uc.flex.disable-sidebery-autohide") or -moz-pref("uc.flex.sidebery-allow-resizable-width")) {
        :root:not([sidebar-expand-on-hover], [titlepreface*="\180e "]) & {
            #sidebar {
                will-change: min-width;
                min-width: var(--uc-sb-sidebar-width) !important;
                transition: min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay) !important;
                /*
                @media -moz-pref("uc.flex.sidebery-fast-hover-expand") {
                    transition: none !important;
                }
                */
            }

            &:hover #sidebar,
            #sidebar-header:has(#sidebar-switcher-target.active) + .sidebar-browser-stack #sidebar {
                min-width: var(--uc-sb-sidebar-hover-width) !important;
                transition: min-width var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-hover-sidebar-delay) !important;
            }
        }
    }
    /* Style 2 */
    @media -moz-pref("uc.flex.fully-hide-sidebery") {
        #sidebar {
            will-change: min-width;
            min-width: var(--uc-sb-sidebar-width) !important;
            transition: min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-autohide-sidebar-delay) !important;
            /*
            @media -moz-pref("uc.flex.sidebery-fast-hover-expand") {
                transition: none !important;
            }
            */
        }

        &:hover #sidebar,
        #sidebar-header:has(#sidebar-switcher-target.active) + .sidebar-browser-stack #sidebar {
            min-width: var(--uc-sb-sidebar-hover-width) !important;
            transition: min-width var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                var(--uc-hover-sidebar-delay) !important;
        }
    }
    /* Style 3 */
    @media not -moz-pref("uc.flex.fully-hide-sidebery") {
        :root:is([inFullscreen], [titlepreface*="\200c "], [titlepreface*="\200d "]) & {
            #sidebar {
                will-change: min-width;
                min-width: var(--uc-sb-sidebar-width) !important;
                transition: min-width var(--uc-autohide-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-autohide-sidebar-delay) !important;
                /*
                @media -moz-pref("uc.flex.sidebery-fast-hover-expand") {
                    transition: none !important;
                }
                */
            }

            &:hover #sidebar,
            #sidebar-header:has(#sidebar-switcher-target.active) + .sidebar-browser-stack #sidebar {
                min-width: var(--uc-sb-sidebar-hover-width) !important;
                transition: min-width var(--uc-hover-transition-duration) var(--uc-autohide-transition-type)
                    var(--uc-hover-sidebar-delay) !important;
            }
        }
    }

    .sidebar-panel {
        background-color: transparent !important;
        color: var(--newtab-text-primary-color) !important;
    }

    .sidebar-panel #search-box {
        -moz-appearance: none !important;
        appearance: none !important;
        background-color: rgba(249, 249, 250, 0.1) !important;
        color: inherit !important;
    }

    /* Add sidebar divider and give it background */
    /*
    & #sidebar,
    & #sidebar-header {
        background-color: inherit !important;
        border-inline: 1px solid rgb(80, 80, 80);
        border-inline-width: 0px 1px;
    }

    &:not([sidebar-positionend]) > :-moz-locale-dir(rtl),
    &[sidebar-positionend] > * {
        border-inline-width: 1px 0px;
    }
    */

    /* Move statuspanel to the other side when sidebar is hovered so it doesn't get covered by sidebar */
    /*
    &:not([sidebar-positionend]):hover ~ #appcontent #statuspanel {
        inset-inline: auto 0px !important;
    }
    &:not([sidebar-positionend]):hover ~ #appcontent #statuspanel-label {
        margin-inline: 0px !important;
        border-left-style: solid !important;
    }
    */
}
