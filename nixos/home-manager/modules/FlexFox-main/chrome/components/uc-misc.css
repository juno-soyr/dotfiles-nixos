/* Add text stroke */
@media -moz-pref("uc.flex.add-ui-text-stroke") {
    * {
        /**
         * Since Firefox v141 on Windows, system Fluent fonts are used
         * for window control icons. Listing them first ensures default
         * Firefox icons take priority over any custom font.
         */
        /* font-family: Segoe Fluent Icons, Segoe MDL2 Assets, <your custom font>, !important; */
        text-shadow: 0 0 0.03em color-mix(in srgb, currentColor 80%, transparent);
        /* -webkit-text-stroke: 0.015em; */
    }

    #urlbar-input {
        text-shadow: none;
        /* -webkit-text-stroke: 0; */
    }
}

/* Remove zoom icon from urlbar */
/*
#urlbar-zoom-button {
    display: none !important;
}
*/

/* Reduce menu spacing */
menupopup > menuitem,
menupopup > menu {
    padding-block: var(--uc-menu-item-padding-block) !important;
}

#contentAreaContextMenu {
    > menuitem {
        padding-block: var(--uc-content-area-context-menu-item-padding-block) !important;
    }
}

/* Reduce Hamburger menu spacing */
:root {
    --arrowpanel-menuitem-padding: var(--uc-app-menu-item-padding-block) !important;
}

/**
 * Removes the private-browsing-mode indicator from tabs toolbar and changes the menu-button icon 
 * to the private-browsing indicator in private windows
 */
#private-browsing-indicator-with-label,
.private-browsing-indicator-with-label,
.private-browsing-indicator {
    display: none;
}
:root[privatebrowsingmode="temporary"] #PanelUI-menu-button {
    list-style-image: url("chrome://global/skin/icons/indicator-private-browsing.svg") !important;
}

/* Prevent bookmarks and search bar from growing */
toolbar:not(#TabsToolbar) > #personal-bookmarks {
    flex-grow: 0 !important;
}

toolbar:not(#TabsToolbar) > #search-container {
    flex-grow: 0 !important;
    width: 20% !important;
    #searchbar {
        min-height: 24px !important;
        max-height: 30px;
    }
}

/* Remove 'Show More Bookmarks' chevron when toolbar isn't overflowing */
/* It's enough to check only the last bookmark item â€” if it's not hidden, 
   then none of the items are hidden, and there's no need to show the chevron */
#PlacesToolbarItems:has(> .bookmark-item:last-child:not([style="visibility: hidden;"])) + #PlacesChevron {
    display: none !important;
}

/* Add the missing top border for non-maximized windows */
#main-window[sizemode="normal"]:is([tabsintitlebar], [customtitlebar]) {
    border-top: 1px solid rgb(67, 72, 76);
}

/* Make Picture-in-Picture Volume Controls always appear at the bottom (Credit u/endgame0 on Reddit) */
/* Modified from https://www.reddit.com/r/FirefoxCSS/comments/1kuyu02/firefox_picture_in_picture_is_almost_perfect_but/ */
@media not -moz-pref("uc.flex.move-pip-volume-to-top") {
    @-moz-document url("chrome://global/content/pictureinpicture/player.xhtml")
    {
        #audio-scrubber {
            min-width: 30px !important;
            max-width: 64px !important;
            width: 100% !important;
        }
        @media (width <= 630px) {
            #audio-scrubber {
                display: inline-block !important;
            }
            .end-controls {
                grid-template-columns: 1fr auto 1fr 1fr !important;
                grid-template-areas: "audio audio-scrubber closedcaption fullscreen" !important;
            }
        }
        @media (width <= 475px) {
            .end-controls {
                grid-template-columns: 1fr auto 1fr !important;
                grid-template-areas: "audio audio-scrubber fullscreen" !important;
            }
        }
        @media (height <= 325px) and (width <= 630px) {
            #audio-scrubber {
                display: inline-block !important;
            }
            .end-controls {
                grid-template-columns: 1fr auto 1fr !important;
                grid-template-areas: "audio audio-scrubber fullscreen" !important;
            }
        }
    }
}

/* Move Picture-In-Picture Volume Controls to the top on small sizes (Credit u/endgame0 on Reddit) */
/* Modified from https://www.reddit.com/r/FirefoxCSS/comments/1kuyu02/firefox_picture_in_picture_is_almost_perfect_but/ */
@media -moz-pref("uc.flex.move-pip-volume-to-top") {
    @-moz-document url("chrome://global/content/pictureinpicture/player.xhtml")
    {
        @media (width <= 630px) {
            #audio {
                position: absolute !important;
                top: calc(
                    10px - (100vh - 2 * var(--resize-margin)) + var(--controls-bottom-upper-height) +
                        var(--player-control-item-height) + var(--controls-bottom-distance)
                ) !important;
                left: calc(10px + var(--player-control-item-height) + 10px) !important;
                width: var(--player-control-item-height) !important;
                height: var(--player-control-item-height) !important;
                z-index: 14 !important;
                grid-area: initial !important;
            }

            #audio::after {
                display: none !important;
            }

            #audio-scrubber {
                display: block !important;
                position: absolute !important;
                top: calc(
                    10px - (100vh - 2 * var(--resize-margin)) + var(--controls-bottom-upper-height) +
                        var(--player-control-item-height) + var(--controls-bottom-distance)
                ) !important;
                left: calc(10px + var(--player-control-item-height) + 10px) !important;
                width: calc(var(--player-control-item-height) + 5px + clamp(80px, 20vw, 120px) + 5px) !important;
                height: var(--player-control-item-height) !important;
                opacity: 0 !important;
                visibility: hidden !important;
                pointer-events: none !important;
                z-index: 13 !important;
                -moz-appearance: auto !important;
                appearance: auto !important;
                background: transparent !important;
                padding-left: calc(var(--player-control-item-height) + 5px) !important;
                padding-right: 5px !important;
                border: initial !important;
                box-sizing: border-box !important;
                transition:
                    opacity 0.2s ease-in-out,
                    visibility 0s linear 0.2s,
                    width 0.25s ease-in-out;
            }

            #audio:hover + #audio-scrubber,
            #audio-scrubber:hover {
                opacity: 1 !important;
                visibility: visible !important;
                pointer-events: auto !important;
            }
        }

        @media (width <= 280px) {
            #audio-scrubber {
                width: calc(var(--player-control-item-height) + 5px + clamp(40px, 10vw, 70px) + 5px) !important;
            }
        }

        @media (width <= 300px) {
            .controls-bottom-lower {
                display: flex !important;
                justify-content: center !important;
                align-items: center !important;
                width: 100% !important;
                margin: 0 !important;
                padding: 0 !important;
            }

            .center-controls {
                display: flex !important;
                justify-content: center !important;
                align-items: center !important;
            }
        }
    }
}

/* Show the number of tabs on the "List All Tabs" button */
/* Modified from https://www.reddit.com/r/FirefoxCSS/comments/1f0cg89/how_to_count_open_tabs_in_firefox/ */
/* Modified from https://github.com/MrOtherGuy/firefox-csshacks/blob/master/chrome/tab_count_in_alltabs_button.css */
/* 17768e9 */

@media -moz-pref("uc.flex.show-tab-count-in-alltabs-button") {
    /* Use different counters depending on whether the button is placed
       before or after the tab strip in horizontal tab mode. */
    @media not -moz-pref("sidebar.verticalTabs") {
        /* Forward counter: counts tabs when the button is placed after them.
           The scope must be #navigator-toolbox since the button can be moved
           anywhere inside it via Customize Toolbar. */
        #navigator-toolbox {
            counter-reset: tab-counter;
        }
        /* Reverse counter: counts tabs when the button is placed before them.
           In this case the button always remains inside
           #TabsToolbar-customization-target, so the scope can be set here. */
        #TabsToolbar-customization-target {
            counter-reset: reversed(tab-counter-reversed);
        }
        /* Adjust the reverse counter's initial value so that it equals the
           total number of tabs. (By default it starts at tab count + 1,
           so we subtract 1.) */
        #tabbrowser-tabs {
            counter-increment: tab-counter-reversed 1;
        }
        /*
        .tabbrowser-tab:not([hidden]):not([pending]) {
            &:first-of-type {
                counter-increment: tab-counter 1 tab-counter-reversed 0;
            }
            &:only-of-type {
                counter-set: tab-counter-reversed 1;
            }
        }
        */
    }

    /* Use a reverse counter in vertical tab mode, since the button is always
       placed before the tab strip. */
    @media -moz-pref("sidebar.verticalTabs") {
        /* Set the counter on #main-window, the common ancestor of both the
           button and the tabs. */
        #main-window {
            counter-reset: reversed(tab-counter);
        }
        /* Adjust the reverse counter's initial value so it equals the total
           number of tabs (default is total +1, so we subtract 1). */
        #sidebar-main {
            counter-increment: tab-counter 1;
        }
        /*
        .tabbrowser-tab:not([pending]) {
            &:first-of-type {
                counter-increment: tab-counter 1 tab-counter-reversed 0;
            }
            &:only-of-type {
                counter-set: tab-counter-reversed 1;
            }
        }
        */
        /* !TEMPORARY: Workaround to disable v144 container changes so counters function again.
           In v144, vertical tabs were changed to an inline-size container, which applies style containment
           and breaks counters. At the moment this container is only used for tab-split-view-wrapper,
           a feature not yet in Nightly, so the full impact of disabling it is unknown.
           This workaround should be removed later once counters are moved inside vertical tabs. */
        #vertical-tabs {
            &[visible] {
                container-type: normal !important;
                container-name: vertical-tabs-container;
            }
        }
    }

    @media -moz-pref("uc.flex.show-tab-count-in-alltabs-button", 1) or -moz-pref("uc.flex.show-tab-count-in-alltabs-button", 2) {
        #alltabs-button > .toolbarbutton-badge-stack::after {
            content: "+" counter(tab-counter);
            position: absolute;
            bottom: 2px;
            right: 3px;
            font-size: 9px;
            line-height: 1;
            color: var(--toolbarbutton-icon-fill);
            pointer-events: none;
        }
        @media not -moz-pref("sidebar.verticalTabs") {
            #TabsToolbar-customization-target #alltabs-button > .toolbarbutton-badge-stack::after {
                content: "+" counter(tab-counter-reversed);
            }
            #TabsToolbar-customization-target #tabbrowser-tabs ~ #alltabs-button > .toolbarbutton-badge-stack::after {
                content: "+" counter(tab-counter);
            }
            :root[customizing] {
                #TabsToolbar-customization-target
                    #tabbrowser-tabs
                    ~ #wrapper-alltabs-button
                    #alltabs-button
                    > .toolbarbutton-badge-stack::after {
                    content: "+" counter(tab-counter);
                }
            }
        }
    }

    @media not (-moz-pref("uc.flex.show-tab-count-in-alltabs-button", 1) or -moz-pref("uc.flex.show-tab-count-in-alltabs-button", 2)) {
        #alltabs-button > .toolbarbutton-badge-stack > .toolbarbutton-icon {
            opacity: 0;
        }
        #alltabs-button > .toolbarbutton-badge-stack::before {
            content: counter(tab-counter);
            display: flex;
            grid-area: 1/1;
            justify-content: center;
            color: var(--toolbarbutton-icon-fill);
            border-bottom: 1px solid;
            contain: inline-size;
        }
        @media not -moz-pref("sidebar.verticalTabs") {
            #TabsToolbar-customization-target #alltabs-button > .toolbarbutton-badge-stack::before {
                content: "+" counter(tab-counter-reversed);
            }
            #TabsToolbar-customization-target #tabbrowser-tabs ~ #alltabs-button > .toolbarbutton-badge-stack::before {
                content: "+" counter(tab-counter);
            }
            :root[customizing] {
                #TabsToolbar-customization-target
                    #tabbrowser-tabs
                    ~ #wrapper-alltabs-button
                    #alltabs-button
                    > .toolbarbutton-badge-stack::before {
                    content: "+" counter(tab-counter);
                }
            }
        }
    }
}

/* Show a number before tab text*/
@media -moz-pref("uc.flex.show-tab-number-in-tab-label") {
    #tabbrowser-tabs {
        counter-reset: nth-tab;
    }

    .tab-text::before {
        content: counter(nth-tab) ".";
        margin-right: 4px;
        opacity: 0.9;
    }
}

@media -moz-pref("uc.flex.show-tab-count-in-alltabs-button") or -moz-pref("uc.flex.show-tab-number-in-tab-label") {
    @media not -moz-pref("sidebar.verticalTabs") {
        @media not (-moz-pref("uc.flex.show-tab-count-in-alltabs-button", 2) or -moz-pref("uc.flex.show-tab-count-in-alltabs-button", 4)) {
            .tabbrowser-tab:not([hidden]) {
                counter-increment: tab-counter 1 tab-counter-reversed -1 nth-tab 1;
            }
        }
        @media -moz-pref("uc.flex.show-tab-count-in-alltabs-button", 2) or -moz-pref("uc.flex.show-tab-count-in-alltabs-button", 4) {
            .tabbrowser-tab:not([hidden]):not([pending]) {
                counter-increment: tab-counter 1 tab-counter-reversed -1 nth-tab 1;
            }
            .tabbrowser-tab[pending]:not([hidden]) {
                counter-increment: nth-tab 1;
            }
        }
    }

    @media -moz-pref("sidebar.verticalTabs") {
        @media not (-moz-pref("uc.flex.show-tab-count-in-alltabs-button", 2) or -moz-pref("uc.flex.show-tab-count-in-alltabs-button", 4)) {
            .tabbrowser-tab {
                counter-increment: tab-counter -1 nth-tab 1;
            }
        }
        @media -moz-pref("uc.flex.show-tab-count-in-alltabs-button", 2) or -moz-pref("uc.flex.show-tab-count-in-alltabs-button", 4) {
            .tabbrowser-tab:not([pending]) {
                counter-increment: tab-counter -1 nth-tab 1;
            }
            .tabbrowser-tab[pending]:not([hidden]) {
                counter-increment: nth-tab 1;
            }
        }

        /* Firefox hides collapsed tab-groups with display:none, excluding them
           from the counter. Force display back and use visibility:collapse so
           they stay hidden but still counted. */
        tab-group {
            #tabbrowser-tabs[orient="vertical"] &[movingtabgroup][collapsed] > .tabbrowser-tab[visuallyselected],
            #tabbrowser-tabs[orient="vertical"] &[collapsed] > .tabbrowser-tab:not([visuallyselected]) {
                display: flex !important;
                visibility: collapse !important;
            }
        }
    }
}
